// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrackYourSpendings.Infrastructure.Database;

#nullable disable

namespace TrackYourSpendings.Infrastructure.Migrations.App
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("app")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Categories", "app");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50d0672e-5a9f-41f2-9912-6eaccec3b09b"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5196),
                            Name = "Housing",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("5cda7116-a260-4c68-b9db-2a596714346f"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5251),
                            Name = "Transportation",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("a0ae659f-78e2-467e-a639-12a286f3cd74"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5270),
                            Name = "Food",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("b91f92c3-1849-444c-915b-57ee11ecf757"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5285),
                            Name = "Utilities",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("504becb7-60f9-41db-ae6a-ae98f7e6ccbc"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5299),
                            Name = "Insurance",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("ec241f35-3d76-4f8c-9fc5-5af3f5a5872a"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5313),
                            Name = "Medical & Healthcare",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("4d328b83-997f-4719-98d5-9713e9d5fcdb"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5328),
                            Name = "Saving, Investing & Dept Payments",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("74140cff-4752-4a7d-8f86-699edc23f4a8"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5341),
                            Name = "Personal Spending",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("227afb2b-7601-4171-ab24-7d5de3796351"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5355),
                            Name = "Recreation & Entertainment",
                            UserId = ""
                        },
                        new
                        {
                            Id = new Guid("405eb333-07dc-4af0-86e3-fe3183e85c93"),
                            CreatedAt = new DateTime(2024, 6, 6, 8, 40, 17, 215, DateTimeKind.Local).AddTicks(5365),
                            Name = "Miscellaneous",
                            UserId = ""
                        });
                });

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions", "app");
                });

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Income")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Wallets", "app");
                });

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("TrackYourSpendings.Domain.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackYourSpendings.Domain.Entities.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TrackYourSpendings.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
